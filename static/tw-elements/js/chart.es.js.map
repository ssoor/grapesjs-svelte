{"version":3,"file":"chart.es.js","sources":["../../node_modules/.pnpm/chart.js@3.7.1/node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/.pnpm/chart.js@3.7.1/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _toLeftRightCenter as $, _rlookupByKey as A, getAngleFromPoint as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, _isDomSupported as K, log10 as L, _factorize as M, finiteOrDefault as N, callback as O, PI as P, _addGrace as Q, toDegrees as R, _measureText as S, TAU as T, _int16Range as U, _alignPixel as V, clipArea as W, renderText as X, unclipArea as Y, toFont as Z, _arrayUnique as _, resolve as a, _angleDiff as a$, _alignStartEnd as a0, overrides as a1, merge as a2, _capitalize as a3, descriptors as a4, isFunction as a5, _attachContext as a6, _createResolver as a7, _descriptors as a8, mergeIf as a9, restoreTextDirection as aA, noop as aB, distanceBetweenPoints as aC, _setMinAndMaxByKey as aD, niceNum as aE, almostWhole as aF, almostEquals as aG, _decimalPlaces as aH, _longestText as aI, _filterBetween as aJ, _lookup as aK, getHoverColor as aL, clone$1 as aM, _merger as aN, _mergerIf as aO, _deprecated as aP, toFontString as aQ, splineCurve as aR, splineCurveMonotone as aS, getStyle as aT, fontString as aU, toLineHeight as aV, PITAU as aW, INFINITY as aX, RAD_PER_DEG as aY, QUARTER_PI as aZ, TWO_THIRDS_PI as a_, uid as aa, debounce as ab, retinaScale as ac, clearCanvas as ad, setsEqual as ae, _elementsEqual as af, _isClickEvent as ag, _isBetween as ah, _readValueToProps as ai, _updateBezierControlPoints as aj, _computeSegments as ak, _boundSegments as al, _steppedInterpolation as am, _bezierInterpolation as an, _pointInLine as ao, _steppedLineTo as ap, _bezierCurveTo as aq, drawPoint as ar, addRoundedRectPath as as, toTRBL as at, toTRBLCorners as au, _boundSegment as av, _normalizeAngle as aw, getRtlAdapter as ax, overrideTextDirection as ay, _textX as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["requestAnimFrame","callback","throttled","fn","thisArg","updateFn","updateArgs","args","ticking","rest","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","noop","uid","id","isNullOrUndef","value","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone$1","source","target","klen","k","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","defined","isFunction","setsEqual","a","b","item","_isClickEvent","e","PI","TAU","PITAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","almostEquals","niceRange","fraction","_factorize","result","sqrt","isNumber","n","x","y","epsilon","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_int16Range","_isBetween","atEdge","t","elasticIn","elasticOut","effects","map","hex","h1","h2","eq","isShort","v","hexParse","ret","hexString","f","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","r","g","rgbString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","d","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1","names","unpack","unpacked","tkeys","j","ok","nk","names$1","nameParse","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","Color","color","weight","me","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","set","root","scope","values","Defaults","_descriptors","context","ctx","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","defaults","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","xOffset","yOffset","size","cornerRadius","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","mode","midpoint","_bezierCurveTo","renderText","text","opts","lines","stroke","line","setRenderOpts","decorateText","metrics","top","bottom","yDecoration","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","index","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","prev","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","useOffsetPos","getCanvasPosition","evt","touches","offsetX","offsetY","box","getRelativePosition","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","propertyFn","normalizeSegment","count","getSegment","segment","bounds","startBound","endBound","between","normalize","_boundSegment","compare","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","spanGaps","solidSegments","last","cur","_computeSegments","segmentOptions","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","datasetIndex","prevStyle","addStyle","st","dir","styleChanged","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","event","cb","acc","animator","transparent","interpolators","from","to","factor","c0","Animation","cfg","currentValue","elapsed","remain","duration","promises","rej","resolved","numbers","colors","animationOptions","Animations","config","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","updateStacks","controller","parsed","iScale","iAxis","vAxis","itemStacks","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","_stacked","sorted","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","arg1","arg2","numMeta","numData","move","removed","newCount","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","horizontal","firstOpts","includeOptions","vpixels","ipixels","dataIndex","barThickness","baseValue","minBarLength","floating","length","head","halfGrid","skipNull","maxBarThickness","center","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","tooltipItem","dataLabel","LineController","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","pointCount","_scaleRanges","newRanges","changed","PolarAreaController","minSize","datasetStartAngle","defaultAngle","PieController","RadarController","pointPosition","ScatterController","abstract","DateAdapter","format","timestamp","amount","unit","weekday","members","adapters","getRelativePosition$1","evaluateAllVisibleItems","handler","binarySearch","metaset","intersect","_sorted","lookupMethod","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","same","other","setBoxDims","placeBoxes","userPadding","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","formatters","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","Ticks","_ctx","autoSkip","tickOpts","ticksLimit","determineMaxTicks","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","startPixel","endPixel","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","decimal","optionTicks","rot","grid","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","title","tz","gz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","drawBorder","borderWidth","borderJoinStyle","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineTo","getLineMethod","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","_getInterpolationMethod","strokePathWithCache","path","strokePathDirect","segmentMethod","usePath2D","LineElement","_interpolate","interpolated","inRange$1","PointElement","mouseX","mouseY","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","borderColor","outer","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","fill","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","_loop","resolveTarget","propagate","visited","_clip","clipY","lineLoop","getBounds","_getEdge","_segments","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","_args","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","sameItem","plugin_legend","ci","usePointStyle","Title","textSize","fontOpts","createTitle","plugin_title","titleBlock","plugin_subtitle","positioners","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","titleSpacing","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","labelCount","addIfString","addedLabels","findOrAddLabel","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","maxTicksLimit","stepSize","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","plFont","hLimits","vLimits","updateLimits","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pointLabels","backdropColor","pathRadiusLine","circular","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","hasWeekday","formats","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","interpolate","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale"],"mappings":"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","x_google_ignoreList":[0,1]}