{"version":3,"file":"chartjs-plugin-datalabels.es.js","sources":["../../node_modules/.pnpm/chartjs-plugin-datalabels@2.0.0_chart.js@3.7.1/node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js"],"sourcesContent":["/*!\n * chartjs-plugin-datalabels v2.0.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2021 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x,\n      y1: el.y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 0], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 0], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: j\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart, options) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(\n      chart[EXPANDO_KEY]._datasets,\n      options);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport default plugin;\n"],"names":["devicePixelRatio","screen","utils","inputs","lines","input","isNullOrUndef","ctx","font","items","ilen","prev","width","i","min","value","max","a0","a1","updates","j","v","orient","point","origin","x0","y0","dx","dy","ln","aligned","x","y","vx","vy","align","R_INSIDE","R_LEFT","R_RIGHT","R_BOTTOM","R_TOP","region","rect","res","clipped","segment","area","x1","y1","r0","r1","r","compute$1","range","config","anchor","positioners","el","angle","rx","ry","sx","sy","rasterize","boundingRects","model","borderWidth","padding","th","tw","tx","ty","getScaleOrigin","context","scale","pixel","getPositioner","ArcElement","PointElement","BarElement","drawRoundedRect","w","h","radius","HALF_PI","left","top","right","bottom","drawFrame","bgColor","borderColor","textGeometry","drawTextLine","text","cfg","shadow","stroked","drawText","color","filled","strokeColor","strokeWidth","Label","index","me","merge","display","toFont","resolve","defaults$1","toPadding","rects","label","valueOrDefault","callback","chart","center","MIN_INTEGER","MAX_INTEGER","rotated","cos","sin","cx","cy","projected","points","axis","pt","dp","toAxis","p0","p1","HitBox","rotation","margin","other","axes","pr0","pr1"],"mappings":"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","x_google_ignoreList":[0]}